snippet cl "Console log"
console.log(${1:'${2}'});
endsnippet

snippet fractions "Display fractions complements to css fractions snippet"
$('.fraction').each(function(key, value) {
    $this = $(this)
    var split = $this.html().split("/")
    if( split.length == 2 ){
        $this.html('<span class="top">'+split[0]+'</span><span class="bottom">'+split[1]+'</span>')
    }    
});
endsnippet

snippet pausevideo "Simple Pause Script for an HTML5 video"
function pause(idVideo){ 
    $('#'+idVideo).trigger('pause'); 
} 
endsnippet

snippet pauseaudio "Simple Pause Script for an HTML5 audio"
function pause(){ 
    $('.audioPlay').trigger('pause'); 
} 
endsnippet

#Selectric activation
snippet selectric "JS - Selectric activation"
    $('select').selectric({
        disableOnMobile: ${1:false},
        width: ${2:200},
    });
endsnippet

#zoomooz 
snippet zoomooz " JS - Zoomooz"
require([ 'jquery-zoomooz'] );
function init(){
    $.zoomooz.setup({root:$('#colZoom')});
    $("#target1").zoomTarget({'targetsize': 1, 'duration': 400, });
    $("#target2").zoomTarget({'targetsize': 1, 'duration': 400, });
    $("#target3").zoomTarget({'targetsize': 1, 'duration': 400, });
    $("#target4").zoomTarget({'targetsize': 1, 'duration': 400, });
}
endsnippet


#Show or hidden elements of a group one at the time
snippet btngroup "JS - Toggle hidden elements one at the time" b
// <button class="naranja " btn-group="1" btn-id="1">1</button>
// <p class="texto1 cblanco cont-h1  txt">Test</p>
function initBtnGroup(){
    var btn = $('[btn-group]');
    $("[class*='cont-h']").css("display","none");

    btn.each(function(){
        $(this).click(function(){
            var idBtnClick = $(this).attr('btn-id');
            $(this).addClass("selected");
            $('.cont-h'+ $(this).attr('btn-id')).effect('slide').css('display','block');
            //sound ('success-low');
            var btnGrupo = $('[btn-group ='+$(this).attr('btn-group')+']');
            btnGrupo.each(function() {
                var idBtn = $(this).attr('btn-id');
                if(idBtn!=idBtnClick){
                    $('.cont-h'+idBtn).css("display","none");
                    $(this).removeClass("selected");
                }
            });
        });
    });
}
endsnippet


# Show Element the hide rest
snippet showelement "Show an element of a group put DISPLAY none for the rest" b

//<p ="img1" groupShow="1" ..... />   ---->   showElement('img1')
function showElement(idElement){
    var element = $(idElement);
    var groupId = $(idElement).attr('groupShow');
    var groupElements =  $('[groupShow='+groupId+']');
    groupElements.css('display','none');
    //element.toggle('slideDown');
    element.toggle('clip');
}
endsnippet


#Higlight active clickable group element
snippet  highlightclickable "Hilight active clickable element of a group"
function initHighLightClickable(groupSelector){
    $(groupSelector).click(function(){
        $(groupSelector).removeClass('selected');
        $(this).addClass('selected');
    });
}
endsnippet

#Animate with animate css 
snippet animatecss "animatecss" b
function animateCss(selector, effect){
    var DEFAULT_EFFECT = 'bounceInLeft';
    effect = (typeof effect === "undefined" || effect=='') ? DEFAULT_EFFECT : effect;
    $(selector).css('visibility','visible'); // Display if hidden initially 
    $(selector).addClass('animated '+ effect);
}
endsnippet

#Pulse effect
snippet animatepulse "Ads an 'infinite' pulse effect on selected elements requires animate.css " b
function pulseButtons(selector){
    $(selector).addClass('animated  infinite pulse');
}
endsnippet

#Animate bounce 
snippet animatebounce "Jquery animate Bounce requiere position absolute "
// Requires position absolute of element
$('#${1}').show().animate({ top: ${2:200}, ${3:opacity: 1} }, {duration: ${4:1000}, easing: 'easeOutBounce'});
endsnippet


# Magic Ani "Sequentially animate a group magically !!!"
snippet magicani "Animate groups of elements"
// Requires  Animate.css
// Author Carlos U
// <tag1 magicGroup="x" ... <tag2 magicGroup="1" magicEffect="zoomInUp"
function magicAnimate(groupSequence){
    var DEFAULT_EFFECT = 'bounceInLeft';

    groupSequence  = (typeof groupSequence === "undefined") ? 1 : groupSequence;
    elements = $('[magicGroup="' + groupSequence + '"]');

    elements.each(function(i){
        attrEffect = $(this).attr('magicEffect');
        effect = (typeof attrEffect === "undefined" || attrEffect === '') ? DEFAULT_EFFECT : attrEffect;
        $(this).addClass('animated '+ effect);
        $(this).css('visibility','visible');
    });
}
endsnippet 


snippet lockimages "Previene el drag de las imagenes para evitar que las arrastren "
function init(){
   $('${1:img}').on('mousedown', function(){return false});
}
endsnippet


#Shuffle Array 
snippet shuffle "Shuffle"
// http://stackoverflow.com/questions/962802#962890
function shuffle(array) {
  var tmp, current, top = array.length;
  if(top) while(--top) {
    current = Math.floor(Math.random() * (top + 1));
    tmp = array[current];
    array[current] = array[top];
    array[top] = tmp;
  }
  return array;
}
endsnippet


# Verify  after stop typing 
snippet  typingtimer "Tiping Timer verify"
// Typing verify 
var typingTimer;                //timer identifier
var doneTypingInterval = 2000;  //time in ms, 5 second for example

//on keyup, start the countdown
$('#${1:input1}').keyup(function(){
    clearTimeout(typingTimer);
    typingTimer = setTimeout(doneTyping, doneTypingInterval);
});

//on keydown, clear the countdown 
$('#$1').keydown(function(){
    clearTimeout(typingTimer);
});

//user is "finished typing," do something
function doneTyping () {

     //var input = $('textarea#inputRespuesta1');
     var input = $('input#input1');
     var text = input.val();

     if(text == "igual o equivalente")
     {
        // sound('success-low');
         input.css('color','rgb(95,163,95);');
     }
     else{
         input.css('color','#de2222');
        // sound('error');
     }

}
endsnippet

snippet validartexto "Prototype to form verify"
function removeAccent(str){
    var map={'À':'A','Á':'A','Â':'A','Ã':'A','Ä':'A','Å':'A','Æ':'AE','Ç':'C','È':'E','É':'E','Ê':'E','Ë':'E','Ì':'I','Í':'I','Î':'I','Ï':'I','Ð':'D','Ñ':'N','Ò':'O','Ó':'O','Ô':'O','Õ':'O','Ö':'O','Ø':'O','Ù':'U','Ú':'U','Û':'U','Ü':'U','Ý':'Y','ß':'s','à':'a','á':'a','â':'a','ã':'a','ä':'a','å':'a','æ':'ae','ç':'c','è':'e','é':'e','ê':'e','ë':'e','ì':'i','í':'i','î':'i','ï':'i','ñ':'n','ò':'o','ó':'o','ô':'o','õ':'o','ö':'o','ø':'o','ù':'u','ú':'u','û':'u','ü':'u','ý':'y','ÿ':'y','Ā':'A','ā':'a','Ă':'A','ă':'a','Ą':'A','ą':'a','Ć':'C','ć':'c','Ĉ':'C','ĉ':'c','Ċ':'C','ċ':'c','Č':'C','č':'c','Ď':'D','ď':'d','Đ':'D','đ':'d','Ē':'E','ē':'e','Ĕ':'E','ĕ':'e','Ė':'E','ė':'e','Ę':'E','ę':'e','Ě':'E','ě':'e','Ĝ':'G','ĝ':'g','Ğ':'G','ğ':'g','Ġ':'G','ġ':'g','Ģ':'G','ģ':'g','Ĥ':'H','ĥ':'h','Ħ':'H','ħ':'h','Ĩ':'I','ĩ':'i','Ī':'I','ī':'i','Ĭ':'I','ĭ':'i','Į':'I','į':'i','İ':'I','ı':'i','Ĳ':'IJ','ĳ':'ij','Ĵ':'J','ĵ':'j','Ķ':'K','ķ':'k','Ĺ':'L','ĺ':'l','Ļ':'L','ļ':'l','Ľ':'L','ľ':'l','Ŀ':'L','ŀ':'l','Ł':'L','ł':'l','Ń':'N','ń':'n','Ņ':'N','ņ':'n','Ň':'N','ň':'n','ŉ':'n','Ō':'O','ō':'o','Ŏ':'O','ŏ':'o','Ő':'O','ő':'o','Œ':'OE','œ':'oe','Ŕ':'R','ŕ':'r','Ŗ':'R','ŗ':'r','Ř':'R','ř':'r','Ś':'S','ś':'s','Ŝ':'S','ŝ':'s','Ş':'S','ş':'s','Š':'S','š':'s','Ţ':'T','ţ':'t','Ť':'T','ť':'t','Ŧ':'T','ŧ':'t','Ũ':'U','ũ':'u','Ū':'U','ū':'u','Ŭ':'U','ŭ':'u','Ů':'U','ů':'u','Ű':'U','ű':'u','Ų':'U','ų':'u','Ŵ':'W','ŵ':'w','Ŷ':'Y','ŷ':'y','Ÿ':'Y','Ź':'Z','ź':'z','Ż':'Z','ż':'z','Ž':'Z','ž':'z','ſ':'s','ƒ':'f','Ơ':'O','ơ':'o','Ư':'U','ư':'u','Ǎ':'A','ǎ':'a','Ǐ':'I','ǐ':'i','Ǒ':'O','ǒ':'o','Ǔ':'U','ǔ':'u','Ǖ':'U','ǖ':'u','Ǘ':'U','ǘ':'u','Ǚ':'U','ǚ':'u','Ǜ':'U','ǜ':'u','Ǻ':'A','ǻ':'a','Ǽ':'AE','ǽ':'ae','Ǿ':'O','ǿ':'o'};
    var res='';
     for (var i=0;i<str.length;i++){c=str.charAt(i);res+=map[c]||c;}return res; 
}

function validarmodo1(){

    var correct=['radiacion', 'conduccion', 'conveccion','conduccion', 'conduccion', 'radiacion','radiacion', 'conveccion'];
    var $i=0;
    var errorsForm=0; 

 $("#${1:ejercicio1} input[type=text]").each(function() {
      val = removeAccent(this.value.toLowerCase());

    if (val == correct[$i]){
        this.style.backgroundColor = "rgb(220, 240, 171)";
    }
    else{
        this.style.backgroundColor = "rgb(255, 160, 157)";
        this.value= '';
        errorsForm ++;
    }
    $i++;
});

 if(errorsForm>0) {
    //sound('error');
 }
 else{
    //sound('success-low');
 } 

}
endsnippet


#Validate a radio group
snippet validarradio "Validate a radio group, complement to validarradio html snippet and validar css snippet"
// Validate a radio group
// Requiere style for bgAcierto, bgError and Resultado html tag
function initValidarRadios( groupName ){
    allRadios = $(':radio[name='+groupName+']');
    //console.log(allRadios);
    allRadios.each(function(){
        $(this).change(function(){
            var keyValue= $(this).attr('keyvalue'); // Id of pair elements radio - resultado
            var resultado = $('.resultado[radioname='+groupName+'][keyvalue='+keyValue+']');

            $('.resultado[radioname='+groupName+']').removeClass('bgError'); //Reset previous errors

            if($(this).val() == "1"){
               // sound('success-low');
                group = $(':radio[name='+$(this).attr("name")+']');
                group.prop('disabled',true);

                resultado.addClass('bgAcierto');
                resultado.removeClass('bgError');
                $(this).prop('disabled','true');
            }
            else{
               // sound('error');
                resultado.addClass('bgError');
                resultado.removeClass('bgAcierto');
            }
        });

    });
}
endsnippet

#Validate a groups of selects 
snippet validarselect "Validate a group of selects complements to validarselect html snippet and validar css snippet "
// initValidarSelects(1, results=[1,2]);
function initValidarSelects(groupKey, results){

    var selects = $('select[groupkey='+groupKey+']');

    selects.each(function(){
        $(this).change(function(){
            var valSelected = $(this).val();
            var keyValue= $(this).attr('keyvalue');
            var resultado = $('.resultado[groupkey='+groupKey+'][keyvalue='+keyValue+']');


            if( results[keyValue] == valSelected){
                //sound('success-low');
                resultado.addClass('bgAcierto');
                resultado.removeClass('bgError');
                $(this).attr('disabled','disabled').selectric('refresh');
            }
            else if(valSelected !== 0  ){  // Wrong option
                //sound('error');
                resultado.addClass('bgError');
                resultado.removeClass('bgAcierto');
            }
            else{  // 0 ==  Empty first element
                resultado.removeClass('bgAcierto');
                resultado.removeClass('bgError');
            }

        });
    });

}
endsnippet

#Validation of group of inputs on lost focus
snippet  validarfocus "Validation of groups on focus out complements to validarfocus html snippet and validar css snippet "
function initValidarFocus(groupKey){
    var results =  [7,7,7,7];
    var inputs = $('input:text[groupkey='+groupKey+']');

    inputs.each(function(){
        $(this).focusout(function(){
            var keyValue= $(this).attr('keyvalue');
            var resultado = $('.resultado[groupkey='+groupKey+'][keyvalue='+keyValue+']');

           if( results[keyValue] == parseInt($(this).val())){
               //sound('success-low');
               resultado.addClass('bgAcierto');
               resultado.removeClass('bgError');
               $(this).prop('disabled','true');
           }
           else{
               if($(this).val()) {
                   //sound('error');
                   $(this).val('');
                   resultado.addClass('bgError');
                   resultado.removeClass('bgAcierto');
               }
               else{ // Empty
                   resultado.removeClass('bgError');
                   resultado.removeClass('bgAcierto');
               }
           }
        });
    });
} //End validar focus

endsnippet
